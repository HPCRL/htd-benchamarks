
#if (((__CUDACC_VER_MAJOR__ == 11) && (__CUDACC_VER_MINOR__ >= 4)) || \
     (__CUDACC_VER_MAJOR__ > 11))
#define TVM_ENABLE_L2_PREFETCH 1
#else
#define TVM_ENABLE_L2_PREFETCH 0
#endif

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(64) default_function_kernel(float* __restrict__ A, float* __restrict__ B, float* __restrict__ C, float* __restrict__ out) {
  float transposed_gemm[32];
  __shared__ float A_shared[256];
  __shared__ float B_shared[512];
  transposed_gemm[0] = 0.000000e+00f;
  transposed_gemm[1] = 0.000000e+00f;
  transposed_gemm[2] = 0.000000e+00f;
  transposed_gemm[3] = 0.000000e+00f;
  transposed_gemm[4] = 0.000000e+00f;
  transposed_gemm[5] = 0.000000e+00f;
  transposed_gemm[6] = 0.000000e+00f;
  transposed_gemm[7] = 0.000000e+00f;
  transposed_gemm[8] = 0.000000e+00f;
  transposed_gemm[9] = 0.000000e+00f;
  transposed_gemm[10] = 0.000000e+00f;
  transposed_gemm[11] = 0.000000e+00f;
  transposed_gemm[12] = 0.000000e+00f;
  transposed_gemm[13] = 0.000000e+00f;
  transposed_gemm[14] = 0.000000e+00f;
  transposed_gemm[15] = 0.000000e+00f;
  transposed_gemm[16] = 0.000000e+00f;
  transposed_gemm[17] = 0.000000e+00f;
  transposed_gemm[18] = 0.000000e+00f;
  transposed_gemm[19] = 0.000000e+00f;
  transposed_gemm[20] = 0.000000e+00f;
  transposed_gemm[21] = 0.000000e+00f;
  transposed_gemm[22] = 0.000000e+00f;
  transposed_gemm[23] = 0.000000e+00f;
  transposed_gemm[24] = 0.000000e+00f;
  transposed_gemm[25] = 0.000000e+00f;
  transposed_gemm[26] = 0.000000e+00f;
  transposed_gemm[27] = 0.000000e+00f;
  transposed_gemm[28] = 0.000000e+00f;
  transposed_gemm[29] = 0.000000e+00f;
  transposed_gemm[30] = 0.000000e+00f;
  transposed_gemm[31] = 0.000000e+00f;
  for (int k_outer_outer = 0; k_outer_outer < 128; ++k_outer_outer) {
    __syncthreads();
    *(float4*)(A_shared + (((int)threadIdx.x) * 4)) = *(float4*)(A + (((((((int)blockIdx.x) >> 4) * 32768) + ((((int)threadIdx.x) >> 1) * 1024)) + (k_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)));
    *(float4*)(B_shared + (((int)threadIdx.x) * 4)) = *(float4*)(B + (((((((int)blockIdx.x) & 15) * 65536) + ((((int)threadIdx.x) >> 1) * 1024)) + (k_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 256)) = *(float4*)(B + ((((((((int)blockIdx.x) & 15) * 65536) + ((((int)threadIdx.x) >> 1) * 1024)) + (k_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 32768));
    __syncthreads();
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[0] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[1] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[2] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[3] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[8] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[9] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[10] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[11] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[16] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[17] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[18] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[19] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[24] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[25] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[26] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[27] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[32] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[33] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[34] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[35] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[40] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[41] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[42] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[43] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[48] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[49] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[50] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[51] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[56] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[57] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[58] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[59] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[64] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[65] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[66] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[67] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[72] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[73] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[74] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[75] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[80] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[81] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[82] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[83] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[88] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[89] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[90] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[91] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[96] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[97] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[98] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[99] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[104] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[105] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[106] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[107] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[112] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[113] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[114] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[115] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[120] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[121] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[122] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[123] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[128] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[129] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[130] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[131] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[136] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[137] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[138] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[139] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[144] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[145] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[146] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[147] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[152] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[153] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[154] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[155] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[160] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[161] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[162] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[163] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[168] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[169] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[170] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[171] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[176] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[177] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[178] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[179] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[184] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[185] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[186] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[187] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[192] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[193] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[194] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[195] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[200] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[201] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[202] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[203] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[208] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[209] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[210] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[211] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[216] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[217] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[218] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[219] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[224] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[225] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[226] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[227] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[232] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[233] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[234] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[235] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[240] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[241] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[242] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[243] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[248] * B_shared[(((int)threadIdx.x) * 8)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[249] * B_shared[((((int)threadIdx.x) * 8) + 1)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[250] * B_shared[((((int)threadIdx.x) * 8) + 2)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[251] * B_shared[((((int)threadIdx.x) * 8) + 3)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[4] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[5] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[6] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[0] = (transposed_gemm[0] + (A_shared[7] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[12] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[13] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[14] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[1] = (transposed_gemm[1] + (A_shared[15] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[20] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[21] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[22] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[2] = (transposed_gemm[2] + (A_shared[23] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[28] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[29] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[30] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[3] = (transposed_gemm[3] + (A_shared[31] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[36] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[37] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[38] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[4] = (transposed_gemm[4] + (A_shared[39] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[44] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[45] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[46] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[5] = (transposed_gemm[5] + (A_shared[47] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[52] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[53] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[54] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[6] = (transposed_gemm[6] + (A_shared[55] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[60] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[61] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[62] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[7] = (transposed_gemm[7] + (A_shared[63] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[68] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[69] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[70] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[8] = (transposed_gemm[8] + (A_shared[71] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[76] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[77] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[78] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[9] = (transposed_gemm[9] + (A_shared[79] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[84] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[85] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[86] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[10] = (transposed_gemm[10] + (A_shared[87] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[92] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[93] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[94] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[11] = (transposed_gemm[11] + (A_shared[95] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[100] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[101] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[102] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[12] = (transposed_gemm[12] + (A_shared[103] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[108] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[109] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[110] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[13] = (transposed_gemm[13] + (A_shared[111] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[116] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[117] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[118] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[14] = (transposed_gemm[14] + (A_shared[119] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[124] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[125] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[126] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[15] = (transposed_gemm[15] + (A_shared[127] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[132] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[133] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[134] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[16] = (transposed_gemm[16] + (A_shared[135] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[140] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[141] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[142] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[17] = (transposed_gemm[17] + (A_shared[143] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[148] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[149] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[150] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[18] = (transposed_gemm[18] + (A_shared[151] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[156] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[157] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[158] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[19] = (transposed_gemm[19] + (A_shared[159] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[164] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[165] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[166] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[20] = (transposed_gemm[20] + (A_shared[167] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[172] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[173] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[174] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[21] = (transposed_gemm[21] + (A_shared[175] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[180] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[181] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[182] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[22] = (transposed_gemm[22] + (A_shared[183] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[188] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[189] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[190] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[23] = (transposed_gemm[23] + (A_shared[191] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[196] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[197] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[198] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[24] = (transposed_gemm[24] + (A_shared[199] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[204] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[205] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[206] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[25] = (transposed_gemm[25] + (A_shared[207] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[212] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[213] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[214] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[26] = (transposed_gemm[26] + (A_shared[215] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[220] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[221] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[222] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[27] = (transposed_gemm[27] + (A_shared[223] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[228] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[229] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[230] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[28] = (transposed_gemm[28] + (A_shared[231] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[236] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[237] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[238] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[29] = (transposed_gemm[29] + (A_shared[239] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[244] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[245] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[246] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[30] = (transposed_gemm[30] + (A_shared[247] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[252] * B_shared[((((int)threadIdx.x) * 8) + 4)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[253] * B_shared[((((int)threadIdx.x) * 8) + 5)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[254] * B_shared[((((int)threadIdx.x) * 8) + 6)]));
    transposed_gemm[31] = (transposed_gemm[31] + (A_shared[255] * B_shared[((((int)threadIdx.x) * 8) + 7)]));
  }
  for (int i_inner = 0; i_inner < 32; ++i_inner) {
    out[(((((((int)blockIdx.x) >> 4) * 32768) + (i_inner * 1024)) + ((((int)blockIdx.x) & 15) * 64)) + ((int)threadIdx.x))] = (transposed_gemm[i_inner] + C[(((((((int)blockIdx.x) >> 4) * 32768) + (i_inner * 1024)) + ((((int)blockIdx.x) & 15) * 64)) + ((int)threadIdx.x))]);
  }
}

